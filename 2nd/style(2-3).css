/*
선택자로 스타일 적용 상대 선택
css 속성? 많은 종류 있음. mdn css => 사이드 메뉴에 properties => 휴지통은 사용 자제 속성 / 실험표시는 시험단계라 지원안하는 브라우저 있음

1. 어느 태그는 한줄을 모두 차지 / 어떤 태그는 콘텐츠 크기만큼 차지  
    p는 한줄, span은 콘텐츠크기만큼 차지. 다른 스타일? html태그가 2가지 종류로 나눌 수 있음
    한줄을 모두 차지 = 블록 엘레멘트 (p, div, ul, li, h1-h6)
    콘텐츠 = inline element (span, a, img, button
    ==> 크기를 지정하고 싶을 때도 서로 차이가 있음.
    ==> width, height 속성에서 블록 element에서만 적용 가능하고 inline에서는 적용해도 변화가 없음

*/

/*두개 동시에 적용할려면 , 사용하기*/
p, span{
    width: 100px;
    height: 100px;
}

p{
    background-color: coral;
}

span{
    background-color: teal;
}


/*
css적인 이유로 tag들을 골라쓰면 안됨! 스타일땜에 고르는게 아니라, 스타일은 css에서 해결봐야함!
tag별로 고유한 특성을 지니고 있더라도 css 속성에서 이 특성을 변경 가능하게 하는것?
    display 속성!! none(아예 element가 사라짐), inline, block, inline-block
*/
p{
    background-color: coral;
    display: inline;
}
span{
    background-color: teal;
    display: block;
}

/*p 태그의 3번째 child ~ 중간에 3이 사라짐*/
p:nth-child(3){
    display: none;
}


/*
박스모델
1. contents(앞에서 지정하던게 조절하던 대상)
2. padding: border와 content 사이의 간격을 조절
3. border: 테두리
4. margine: 다른 박스와의 간격
*/
p:nth-child(3){
    display: none;
    margin: 10px 20px; /*위아래10, 좌우20 적용 // top-right-bottom-left(시계) 순으로 숫자가 margin을 적용됨*/
    margin-right: 50px; /*오른쪽만 50px 마진(여백) 적용 가능*/
    padding: 20px; /*글씨 컨텐츠와 border 사이의 여백*/

    /*border: 굵기(width-상하좌우별로 설정 가능), 종류(sytle), 색상(color) 별도 지정 가능.*/
    border: 5px solid blue; /*굵기-종류-색상 순으로 적용됨(축약형태)*/
    /*solid? 여러 보더 스타일 중 하나. 근데 요즘에 보더스타일을 쓰는 추세는 아니라서 solid만 알아도 됨*/
    border-top-width: 15px; /*위에있는 border만 굵기가 달라짐*/
}
/*
박스 사이징 = 크기 설정 : content box(콘텐트까지의 크기설정), 
        border box(보더까지의 크기설정:content+padding+border: width 100 => 100 - padding - border )

        보통 box-sizing: border-box라고 하는데
        왜? content-box를 쓰면 padding과 border가 설정할때마다 설정할때마다 사이즈가 커져서 불편할떄가 많음
        의문점? 모든 태그가 기본적으로 box-sizing이 content-box로 설정되어있는데, 이거 하나하나 바꿔줘야하나?
        전체 태그를 다 선택하고 싶으면? * 선택자 사용하기!!
*/
* {
    box-sizing: border-box;
}



/*

단위?
절대단위 : px
화면 크기별로 사이즈가 자동적으로 변하게 하는 단위는 %(부모 기준), em(부모), rem(최상위태그-html태그의 폰트 사이즈 설정 필요!!// 기준)(상대단위)

<div>
    <span>1000</span>
</div>

html{
    font-size: 16px
}

span{
    background-color: teal;
    display: block;
}

div{
    margin-top: 20px;
    background-color: lightblue;
    width: 200px;
    height: 200px;
    font-size: 1.5rem; = 16px에 1.5 곱하면 됨(24px)
}

그냥 span하면 모든 span에 적용되니까
아래처럼 하면 div 안의 span에만 적용됨 // 띄어쓰기가 부모 자식 // ,가 여러 선택자 선택
div span {
    font-size: 1.2em; = 부모(div=24px)의 폰트사이즈를 기준으로 = 24*1.2 = 28.8px
    height: 80%; =200*0.8=160px
    width: 100%;
}

%는 width, height 지정에 많이 쓰임
em, rem은 font-size, margin, padding을 줄 때 자주 쓰임
화면 크기가 다양해져 em, rem 사용이 권고됨. 반응형 웹페이지를 써야 해서!!
~ 이건 나중에 짚고 넘어가보겠다!
*/


/*
p, span에서 display: block에서의 차이가 생긴 이유?
p는 위아래로 margin이 있지만 span은 없음
브라우저의 기본 스타일링 때문!
브라우저마다 태그의 기본 스타일링이 존재함!

user agent stylesheet = 브라우저의 기본 스타일링
p에 대한 기본 스타일링이 존재함(1em(html font-size:16)==16px)
span은 user agent stylesheet이 없어서 margin이 기본적으로 없음

브라우저마다 기본 스타일링이 달라서 동일한 웹페이지를 여러곳에서 보여줄려면
모두 초기화하는 작업이 필요함!!

==> reset css 쳐서 나오는 코드를 복붙하면 원래 부라우저가 가진 스타일링을 대부분 초기화해줌.
태그별 마진이나 패딩값을 죽여주는 용도로 사용해서 reset css 사용 안하고 전체 선택자(*)를 사용해서 초기화 시켜도 됨

*{
    margin: 0;
    padding: 0;
}

하면 reset css 없이 p에서 존재한 margin을 없앨 수 있음

참고로 span을 display: inline-block 했을 때 나오는 여백은 조정할 수 없는 여백임
태그와 태그 사이에 존재하는 여백이라서 margin, padding이 없어서 inline이나 inline-block을 사용하지 않고flex를 많이 사용해서 레이아웃을 짜는 추세임.


모르는 속성은 mdn에서 검색해서 공부해보세요!
*/